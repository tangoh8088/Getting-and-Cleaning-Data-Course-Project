?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res)
separate(students2,res)
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
?spread
submit()
submit()
submit
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(status)
mutate(status=passed)
mutate(status = "passed")
mutate(passed, status=passed)
mutate(passed, status)
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
packageVersion('dplyr')
bind_rows(passed,failed)
sat
submit()
submit()
library(swirl)
swirl()
Sys.getlocalte("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy ("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19-20-12")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 7, minutes = 11, seconds = 2)
this_moment
nyc <- now(tzone="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval()
?new_interval
how_long <- new_interval(arrive - last_time)
how_long <- new_interval(arrive, last_time)
how_long <- new_internal(last_time, arrive)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
histt(ppm,col="green",breaks=100)
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution, region =="west"),col="green")
hist((subset(pollution, region =="west")),col="green")
hist((subset(pollution, region =="west"))[["pm25"]],col="green")
hist(subset(pollution,region=="west")$pm25, col = "green")
withn(pollution,plot(pollution$latitude,pollution$pm25))
with(pollution,plot(pollution$latitude,pollution$pm25))
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25),lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col= pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude,west$pm25,main = "west")
plot(west$latitude,west$pm25,main = "West")
plot(east$latitude,east$pm25,main = "East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.cur()
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed),cars$dist,"SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region,data=state,layout=x(4,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(4,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(2,2))
head(mpg)
dim(mgp)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(xlab="Month",ylab="Ozone (ppb)",col.axis='blue",col.lab = "red')
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis='blue",col.lab = "red')
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab = "red")
title(main="Ozone and Wind in New York City")
plot(airquality,plot(Wind,Ozone))
plot(airquality,Wind,Ozone))
plot(airquality,Wind~Ozone))
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind,airquality$Ozone,set=="n")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main = "Wind and Ozone in NYC")
may <- subset(airquality,"5")
may <- subset(airquality,Month == 5")
may <- subset(airquality,Month == 5")
may <- subset(airquality,Month == 5)
points(may,wind,ozone, color = "blue", pch = "20")
points(may$wind,may$ozone, color = "blue", pch = "20")
points(may$wind,may$ozone, color = "blue", pch = "17")
points(may$wind,may$ozone, color = "blue", pch = 17)
points(may$wind,may$ozone, col = "blue", pch = 17)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month !== 5)
notmay <- subset(airquality, Month !== 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind,notmay$Ozone,col="red",pch="18")
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch = c(17,8),col = c("blue","red", legend = c("May","Other Months")))
legend("topright", pch = c(17,8),col = c("blue","red", legend = c("May","Other Months"))
legend("topright", pch = c(17,8),col = c("blue","red"), legend = c("May","Other Months"))
abline( v= median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Win,airquality$Ozone,main = "Ozone and Wind")
plot(airquality$Wind,airquality$Ozone,main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main = "Ozone and Wind")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
install.packages("ggplot2")
library(ggplot2)
str(mpg)
library(swirl)
swirl()
head(airquality)
xyplot(airquality$Ozone~airquality$Wind)
xplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~xlf, layout= c(2,1))
xyplot(y~x|f, layout= c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xy(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?fgb
?rgb
p3 <- colorRampPalette(c("blue","green",0.5))
p3 <- colorRampPalette(c("blue","green",alpha=.5))
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y, pch=19,col=rgb(0,.5,.5))
plot(x,y, pch=19,col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
library(swirl)
swirl()
str(mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg, aes(col=drv))
qplot(displ,hwy,aes(color=drv), data = mpg)
qplot(displ,hwy,data = mpg,col=drv)
qplot(displ, hwy, data = mpg, color =drv)
qplot(displ, hwy, data = mpg, color =drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv,hwy,data = mpg, geom = "boxplot")
qplot(drv,hwy,data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy,data = mpg, fill = drv)
qplot(disp,hwy,data=mpg,facets=". ~ drv")
qplot(displ,hwy,data=mpg,facets=". ~ drv")
qplot(displ,hwy,data=mpg,facets= . ~ drv)
qplot(hwy,data=mpg,facets= drv~. ,binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("point","smooth",facets = .!drv,method="loess"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth",facets = .!~drv,method="loess"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth",facets = .~drv,method="loess"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv,method="loess"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv,method="loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv, methods = "loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv, method = "loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv, met = "loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv, met = c("loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv, met = c("loess"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv, method = "loess")
skip()
swirl()
qplot (dis, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv, method = "loess")
hjfd
qplot (dis, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv)
qplot (displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv)
qplot(displ, hwy, data = mpg, geom=c("point",
| "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point","smooth"),facets=.~drv,method="loess")
install.packages(ggplot2)
qplot(displ, hwy, data = mpg, geom=c("point","smooth"),facets=.~drv,method="loess")
quit()
install.packages("ggplot2")
library(ggplot2)
library(swirl)
swirl()
qplot(displ, hwy, data = mpg, geom=c("point","smooth"),facets=.~drv,method="loess")
install_from_swirl("Exploratory Data Analysis")
info()
skip()
swirl()
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill = cut())
qplot(price, data=diamonds, binwidth=18497/30, fill = cut
qplot(price, data=diamonds, binwidth=18497/30, fill = cut)
qplot(price, data=diamonds, geom = "density")
qplot(price, data=diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
skip()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(dplyr)
library(reshape2)
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
download.file(fileURL, filename, method="curl")
}
setwd("C:/xing/Data Science Spec/3. Getting and Cleaning Data/Week 4/Assignment")
if (!file.exists("data")){ url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url, "data")
}
if (!file.exists("UCI HAR Dataset")) {
unzip("data")
}
if (!file.exists("UCI HAR Dataset")) {
unzip("data")
}
actlab <- read.table("UCI HAR Dataset/activity_labels.txt")
View(actlab)
str(actlab)
actlab$V2 <- as.character(actlab$V2)
str(actlab)
features <- read.table("UCI HAR Dataset/features.txt")
str(features)
features$V2 <- as.character(features$V2)
str(features)
trainset <- read.table("UCI HAR Dataset/X_train.txt")
trainlab <- read.table("UCI HAR Dataset/Y_train.txt")
trainsub <- read.table("UCI HAR Dataset/train/subject_train.txt")
trainset <- read.table("UCI HAR Dataset/train/X_train.txt")
trainlab <- read.table("UCI HAR Dataset/train/Y_train.txt")
View(trainlab)
View(trainset)
View(trainsub)
testset <- read.table("UCI HAR Dataset/test/X_test.txt")
testlab <- read.table("UCI HAR Dataset/test/y_test.txt")
testsub <- read.table("UCI HAR Dataset/test/subject_test.txt")
View(features)
featuressub <- grep(".*mean.*|.*std.*",features$V2)
featuressub <- features[grep(".*mean.*|.*std.*",features$V2)]
featuressub <- features[grep(".*mean.*|.*std.*",features$V2),2]
featuressub <- grep(".*mean.*|.*std.*",features$V2,value = TRUE)
featuresnames <- gsub("-mean", "Mean", featuressub)
featuresnames <- gsub("-std", "Std", featuressub)
featuresnames <- gsub("[-()]", "", featuressub)
trainsetstub <- trainset[featuressub]
View(testset)
trainsetstub <- trainset[[featuressub]]
test <- read.table("UCI HAR Dataset/train/X_train.txt")[featuressub]
test <- read.table("UCI HAR Dataset/train/X_train.txt")[featuressub,]
View(test)
train <- cbind(trainsub, trainlab,trainset)
View(train)
View(features)
View(testsub)
View(testlab)
test <- cbind (testsub,testlab,testset)
View(test)
datset <- rbind(train,test)
featuresnames <- gsub("-mean", "Mean", features$V2)
featuresnames <- gsub("-std", "Std", features$V2)
featuresnames <- gsub("[-()]", "", features$V2)
rm(featuressub)
rm(featuresnames)
featuresnames <- gsub("-mean", "Mean", features$V2)
featuresnames <- gsub("-std", "Std", features$V2)
featuresnames <- gsub("[-()]", "", features$V2)
featuressub <- grep(".*[mM]ean.*|.*[sS]td.*",features$V2)
featuresnew <- features[featuressub,]
View(featuresnew)
View(datset)
train <- cbind(trainset, trainlab, trainsub)
test <- cbind (testset, testlab, testsub)
datset <- rbind(train,test)
View(train)
colsneed <- c(featuressub,562,563)
newdat <- datset[,colsneed]
View(newdat)
View(featuresnew)
colnames(newdat) <- c(featuresnew$V2, "Activity", "Subject")
colnames(newdat) <- tolower(colnames(newdat))
View(actlab)
newdat$activity <- factor(newdat$activity, levels = actlab[,1], labels = actlab[,2])
newdat$subject <- as.factor(newdat$subject)
meltnewdat <- melt(newdat, id = c("subject", "activity"))
View(meltnewdat)
newdatave <- dcast(meltnewdat, subject+activity ~ variable,mean)
View(newdatave)
write.table(newdatave, "tidy.txt")
rm(actlab)
rm(datset)
rm(features)
rm(featuresnew)
rm(meltnewdat)
rm(newdat)
rm(newdatave)
rm(test)
if (!file.exists("data")){
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url, "data")
}
if (!file.exists("UCI HAR Dataset")) {
unzip("data")
}
actlab <- read.table("UCI HAR Dataset/activity_labels.txt")
actlab$V2 <- as.character(actlab$V2)
features <- read.table("UCI HAR Dataset/features.txt")
features$V2 <- as.character(features$V2)
trainset <- read.table("UCI HAR Dataset/train/X_train.txt")
trainlab <- read.table("UCI HAR Dataset/train/y_train.txt")
trainsub <- read.table("UCI HAR Dataset/train/subject_train.txt")
testset <- read.table("UCI HAR Dataset/test/X_test.txt")
testlab <- read.table("UCI HAR Dataset/test/y_test.txt")
testsub <- read.table("UCI HAR Dataset/test/subject_test.txt")
featuresnames <- gsub("-mean", "Mean", features$V2)
featuresnames <- gsub("-std", "Std", features$V2)
featuresnames <- gsub("[-()]", "", features$V2)
train <- cbind(trainset, trainlab, trainsub)
test <- cbind (testset, testlab, testsub)
datset <- rbind(train,test)
featuressub <- grep(".*[mM]ean.*|.*[sS]td.*",features$V2)
featuresnew <- features[featuressub,]
colsneed <- c(featuressub,562,563)
newdat <- datset[,colsneed]
colnames(newdat) <- c(featuresnew$V2, "activity", "subject")
colnames(newdat) <- tolower(colnames(newdat))
newdat$activity <- factor(newdat$activity, levels = actlab[,1], labels = actlab[,2])
newdat$subject <- as.factor(newdat$subject)
meltnewdat <- melt(newdat, id = c("subject", "activity"))
newdatave <- dcast(meltnewdat, subject+activity ~ variable,mean)
View(meltnewdat)
View(newdatave)
tidy <- aggregate(newdat,by=list(activity=newdat$activity, subject=newdat$subject),mean)
View(tidy)
View(newdatave)
setwd("C:/Users/Ser Xing/Getting-and-Cleaning-Data-Course-Project")
write.table(newdatave, "tidy.txt")
write.table(newdatave, "tidy.txt", row.names = FALSE)
